package net.zjvis.flint.data.hub.controller.algorithm.vo;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;
import com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.*;
import lombok.extern.jackson.Jacksonized;

import java.time.LocalDateTime;

@NoArgsConstructor
@AllArgsConstructor
@Builder(toBuilder = true)
@Getter
@Setter
@Jacksonized
@EqualsAndHashCode
@ToString
@Schema
public class BusinessAlgorithmVO {
    @Schema(description = "Generated by database to identify unique business algorithm")
    private Long id;
    @Schema(description = "Algorithm release/deploy/use info")
    private AlgorithmVO algorithm;
    @Schema(description = "User defined algorithm name")
    private String name;
    @Schema(description = "Algorithm version", example = "v1.0 (Default value)")
    private String version;
    @Schema(description = "User id")
    private Long universalUserId;
    @Schema(description = "The flag of whether shared for others")
    private boolean shared;
    @Schema(description = "Algorithm type", example = "custom , built-in")
    private String type;
    @Schema(description = "The flag of whether deleted")
    private boolean deleted;
    @Schema(description = "Algorithm service address")
    private String outerServerAddress;
    @Schema(description = "Algorithm created time")
    @JsonDeserialize(using = LocalDateTimeDeserializer.class)
    @JsonSerialize(using = LocalDateTimeSerializer.class)
    private LocalDateTime gmtCreate;
    @Schema(description = "Algorithm updated time")
    @JsonDeserialize(using = LocalDateTimeDeserializer.class)
    @JsonSerialize(using = LocalDateTimeSerializer.class)
    private LocalDateTime gmtModify;
}
