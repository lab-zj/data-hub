package net.zjvis.flint.data.hub.controller.algorithm.vo;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;
import com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.*;
import lombok.extern.jackson.Jacksonized;
import net.zjvis.flint.data.hub.controller.artifact.vo.BusinessDockerRegistryImageVO;
import net.zjvis.flint.data.hub.util.ActionStatusEnum;

import java.time.LocalDateTime;

@NoArgsConstructor
@AllArgsConstructor
@Builder(toBuilder = true)
@Getter
@Setter
@Jacksonized
@EqualsAndHashCode
@ToString
@Schema
public class AlgorithmReleaseVO {
    @Schema(description = "Generated by database to identify unique algorithm release")
    private Long id;
    @Schema(description = "Algorithm release/deploy/use info")
    private AlgorithmVO algorithm;
    @Schema(description = "Algorithm release status", example = "CREATED , RUNNING , FAILED , SUCCEED , CANCELED")
    private ActionStatusEnum status;
    @Schema(description = "Algorithm release image info")
    private BusinessDockerRegistryImageVO image;
    @Schema(description = "Algorithm release job name")
    private String jobName;
    @Schema(description = "Algorithm release job start time")
    @JsonDeserialize(using = LocalDateTimeDeserializer.class)
    @JsonSerialize(using = LocalDateTimeSerializer.class)
    private LocalDateTime gmtCreate;
    @Schema(description = "Algorithm release job updated time")
    @JsonDeserialize(using = LocalDateTimeDeserializer.class)
    @JsonSerialize(using = LocalDateTimeSerializer.class)
    private LocalDateTime gmtModify;
}
